<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 2&#43;2=5</title>
    <link>https://simon-lu.github.io/posts/</link>
    <description>Recent content in Posts on 2&#43;2=5</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 18 Feb 2021 16:28:47 +0800</lastBuildDate><atom:link href="https://simon-lu.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>什么是差分数组？</title>
      <link>https://simon-lu.github.io/2021/what_is_diff_arr/</link>
      <pubDate>Thu, 18 Feb 2021 16:28:47 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2021/what_is_diff_arr/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Leetcode 376.摆动序列</title>
      <link>https://simon-lu.github.io/2020/leetcode376/</link>
      <pubDate>Sat, 12 Dec 2020 02:30:02 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2020/leetcode376/</guid>
      <description>如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为摆动序列。第一个差（如果存在的话）可能是正数或负数。少于两个元素的序列也是摆动</description>
    </item>
    
    <item>
      <title>LeetCode 659.分割数组为连续子序列</title>
      <link>https://simon-lu.github.io/2020/leetcode659/</link>
      <pubDate>Fri, 04 Dec 2020 21:28:01 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2020/leetcode659/</guid>
      <description>给你一个按升序排序的整数数组num（可能包含重复数字），请你将它们分割成一个或多个子序列，其中每个子序列都由连续整数组成且长度至少为 3 。 如果</description>
    </item>
    
    <item>
      <title>树状数组/BIT/Fenwick树</title>
      <link>https://simon-lu.github.io/2020/binary_indexed_tree/</link>
      <pubDate>Sat, 28 Nov 2020 18:59:32 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2020/binary_indexed_tree/</guid>
      <description>介绍 Fenwick树主要是用来解决数组前缀和的问题，其主要思想是在每个节点存储部分和和通过从叶节点到根节点遍历得到总和，树的高度为log(n</description>
    </item>
    
    <item>
      <title>优雅的二分查找写法</title>
      <link>https://simon-lu.github.io/2020/elegant_binary_search/</link>
      <pubDate>Mon, 16 Nov 2020 13:57:15 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2020/elegant_binary_search/</guid>
      <description>隐藏文字 二分查找是一种很常用的算法，记住一个优雅写法的模板能够让我们更便利刷题。在花花的视频里看到了这种写法，感觉很好用，记录一下 这种写法针</description>
    </item>
    
    <item>
      <title>二叉树的遍历</title>
      <link>https://simon-lu.github.io/2020/binary_tree_traversal/</link>
      <pubDate>Tue, 20 Oct 2020 21:26:16 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2020/binary_tree_traversal/</guid>
      <description>二叉树的遍历是面试和刷题中常见的问题，二叉树常用的为以下几种方式，其中前序、中序和后序都有递归和迭代两种方式，递归比较简单，主要记录一下迭代</description>
    </item>
    
    <item>
      <title>使用Travis CI简化博客流程</title>
      <link>https://simon-lu.github.io/2020/hugo_travisci/</link>
      <pubDate>Tue, 15 Sep 2020 02:01:49 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2020/hugo_travisci/</guid>
      <description>隐藏文字 -- before 建立了两个repo, 一个是github page，另一个my_blog保存博客源代码，使用脚本来管理两个仓库，每次的更改都向两个仓</description>
    </item>
    
    <item>
      <title>Ubuntu备忘录</title>
      <link>https://simon-lu.github.io/2020/ubuntu_note/</link>
      <pubDate>Sat, 25 Apr 2020 18:46:48 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2020/ubuntu_note/</guid>
      <description>尝试过Manjaro i3wm一段时间，还是喜欢Ubuntu 16.04经典版本，需要配置许多环境，为了方便以后查看，记录一下过程。 基础环境 1. 连</description>
    </item>
    
    <item>
      <title>《Redis设计与实现》读书笔记</title>
      <link>https://simon-lu.github.io/2019/redis_note/</link>
      <pubDate>Thu, 28 Nov 2019 21:32:13 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2019/redis_note/</guid>
      <description>&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;每个key-value都是由对象组成的&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>从一段代码的运行结果说起</title>
      <link>https://simon-lu.github.io/2019/begin_with_a_piece_of_code/</link>
      <pubDate>Thu, 26 Sep 2019 22:29:48 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2019/begin_with_a_piece_of_code/</guid>
      <description>本来是一道面试题目，想深究一下，加深自己对函数调用过程的理解，题目代码如下： class A { public: void f1() { cout &amp;lt;&amp;lt; &amp;#34;f1 function&amp;#34; &amp;lt;&amp;lt; endl; } void setA(int x) { a = x; cout &amp;lt;&amp;lt; &amp;#34;setA() function&amp;#34; &amp;lt;&amp;lt; endl; } int getA() { cout</description>
    </item>
    
    <item>
      <title>后台面试题目总结</title>
      <link>https://simon-lu.github.io/2019/summary_of_interview_questions/</link>
      <pubDate>Sat, 17 Aug 2019 18:50:22 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2019/summary_of_interview_questions/</guid>
      <description>一、C/C++语言部分 static关键字 在C语言中，关键字static可以用来修饰变量和函数，其中： static加在局部变量的前面改变其存储</description>
    </item>
    
    <item>
      <title>如何使用GDB调试项目</title>
      <link>https://simon-lu.github.io/2019/how_to_use_gdb/</link>
      <pubDate>Mon, 03 Jun 2019 14:51:25 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2019/how_to_use_gdb/</guid>
      <description>&lt;p&gt;-g 可在编译后的程序中保留调试符号信息&lt;br&gt;
strip hello_server 移除程序中存在的调试信息，程序测试后没有问题，我们可以使用此命令减小程序体积,调试文件时建议关闭编译器优化选项，有可能会优化掉排查的对象&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>linux服务器端开发常用的命令</title>
      <link>https://simon-lu.github.io/2019/commands_in_server_dev/</link>
      <pubDate>Sat, 18 May 2019 15:54:56 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2019/commands_in_server_dev/</guid>
      <description>nc nc -v -p 9999 127.0.0.1 3000 ps和top ps ps -ef | grep 相应的进程名称 UID（用户id）、 PID（进程id）、PPID（ 进程的父进程id）、C（ 占用cpu百分比</description>
    </item>
    
    <item>
      <title>《深度探索C&#43;&#43;对象模型》读书笔记</title>
      <link>https://simon-lu.github.io/2019/inside_the_c-_object_model/</link>
      <pubDate>Mon, 06 May 2019 20:39:58 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2019/inside_the_c-_object_model/</guid>
      <description>第一章 关于对象 关于封装后的布局成本 封装后Point3d并没有增加成本，data member直接内含在每一个class object中，memb</description>
    </item>
    
    <item>
      <title>LeetCode中遇到的问题</title>
      <link>https://simon-lu.github.io/2019/leetcode107/</link>
      <pubDate>Mon, 11 Mar 2019 01:19:45 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2019/leetcode107/</guid>
      <description>LeetCode 107 vector的insert问题 在LeetCode 107题目中，本来是一个简单的遍历问题，但是由于我对vector的insert用法的不熟</description>
    </item>
    
    <item>
      <title>C&#43;&#43; STL和泛型编程</title>
      <link>https://simon-lu.github.io/2018/c-_stl/</link>
      <pubDate>Tue, 15 May 2018 13:17:06 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2018/c-_stl/</guid>
      <description>headers C++ Standard Library &amp;gt; Standard Template Librry 标准库以header files形式呈现 C++标准库的header files不带(.h),例如 #include&amp;lt;vector&amp;gt; 新式C header files不带(.h)</description>
    </item>
    
    <item>
      <title>C&#43;&#43;面向对象学习笔记(下)</title>
      <link>https://simon-lu.github.io/2018/c-_oop_1/</link>
      <pubDate>Sat, 12 May 2018 00:09:50 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2018/c-_oop_1/</guid>
      <description>conversion function 没有返回类型 class Fraction { public: // 要加const，分子和分母并不会改变 // 由于已经有了double(),虽然是返回double类型，但是可以不写 operator double() const</description>
    </item>
    
    <item>
      <title>C&#43;&#43;面向对象学习笔记(上)</title>
      <link>https://simon-lu.github.io/2018/c-_oop_2/</link>
      <pubDate>Thu, 10 May 2018 14:21:17 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2018/c-_oop_2/</guid>
      <description>推荐书籍 《C++ Primer》 《Effective C++》 头文件与类 Header的防卫式声明： 以complex.h为例 #ifndef __COMPLEX__ #define __COMPLEX__ ... ... #endif constructor 尽量使</description>
    </item>
    
    <item>
      <title>Ubuntu下面的日常</title>
      <link>https://simon-lu.github.io/2018/in_ubuntu/</link>
      <pubDate>Tue, 24 Apr 2018 16:32:24 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2018/in_ubuntu/</guid>
      <description>软件图标 更新了pycharm到2018.1版本，但是任务栏的图标仍然是2017版本的，于是删除了2017版本，重新创建了一个图标 sudo vi /usr/share/applications/pycharm.desktop 填写以</description>
    </item>
    
    <item>
      <title>C语言常考知识点</title>
      <link>https://simon-lu.github.io/2018/c-_interview/</link>
      <pubDate>Fri, 20 Apr 2018 19:49:56 +0000</pubDate>
      
      <guid>https://simon-lu.github.io/2018/c-_interview/</guid>
      <description>实习经历 #define和const的区别 编译器对二者的处理方式不一样 define实在预编译处理阶段直接进行替换，而const常量实在编译运行</description>
    </item>
    
    <item>
      <title>git常用命令总结</title>
      <link>https://simon-lu.github.io/2018/summary_of_git_command/</link>
      <pubDate>Sat, 17 Mar 2018 08:50:16 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2018/summary_of_git_command/</guid>
      <description>在github上merge了一个pull request后，想要更新本地仓库，却发现报这样的错误： Please, commit your changes or stash them before you can merge.Aborting 这个原因就是本地的仓库</description>
    </item>
    
    <item>
      <title>Ubuntu16.04安装双显卡驱动GT750M</title>
      <link>https://simon-lu.github.io/2018/dual_graphics_driver_in_ubuntu/</link>
      <pubDate>Mon, 15 Jan 2018 15:29:16 +0800</pubDate>
      
      <guid>https://simon-lu.github.io/2018/dual_graphics_driver_in_ubuntu/</guid>
      <description>安装GT750官方驱动 可自由切换独显和核心显卡 具体步骤： 1.安装显卡切换软件 打开终端，输入以下命令 sudo add-apt-repository ppa:nilarimogard/webupd8 sudo apt-get update sudo apt-get install prime-indicator 安装完毕后，重启。状态</description>
    </item>
    
  </channel>
</rss>
